kind: pipeline
type: docker
name: pastebin

steps:
  - name: restore-cache
    image: meltwater/drone-cache
    pull: if-not-exists
    settings:
      backend: "filesystem"
      restore: true
      ttl: 1
      cache_key: "volume"
      archive_format: "gzip"
      mount:
        - ./.m2/repository
    volumes:
      - name: maven-cache
        path: /tmp/cache

  - name: checkout
    image: plugins/git
    settings:
      depth: 1

  - name: maven-build
    image: maven:3.8.6-amazoncorretto-11
    pull: if-not-exists
    commands:
      - mvn clean package -DskipTests=true -Dmaven.repo.local=.m2/repository -B -V
    volumes:
      - name: maven-cache
        path: /tmp/cache

  - name: build-and-push-image
    image: plugins/docker
    volumes:
      - name: docker-sock
        path: "/var/run/docker.sock"
      - name: maven-cache
        path: /tmp/cache
    settings:
      username: newgr8player
      password:
        from_secret: dockerhub_password
      repo: newgr8player/pastebin
      tags: ${DRONE_TAG}
      dockerfile: ./Dockerfile
    trigger:
      branch:
        - master
      when:
        - tag

  - name: rebuild-cache
    image: meltwater/drone-cache
    pull: if-not-exists
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      ttl: 1
      mount:
        - ./.m2/repository
    volumes:
      - name: maven-cache
        path: /tmp/cache

volumes:
  - name: maven-cache
    host:
      path: /tmp/cache

secrets:
  dockerhub_username:

  dockerhub_password:
    from_secret: dockerhub_password
